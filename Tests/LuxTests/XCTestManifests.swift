#if !canImport(ObjectiveC)
import XCTest

extension FileInjectionServiceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FileInjectionServiceTests = [
        ("testInject1", testInject1)
    ]
}

extension InjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InjectorTests = [
        ("testInjectorShouldInjectNA_Plain", testInjectorShouldInjectNA_Plain)
    ]
}

extension JsonInjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JsonInjectorTests = [
        ("testInjectCssClasses", testInjectCssClasses),
        ("testInjectTerminalColor", testInjectTerminalColor)
    ]
}

extension PlistInjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PlistInjectorTests = [
        ("testInjectCssClasses", testInjectCssClasses),
        ("testInjectTerminalColor", testInjectTerminalColor)
    ]
}

extension XMLEnhancedInjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLEnhancedInjectorTests = [
        ("testInjectCssClasses", testInjectCssClasses),
        ("testInjectTerminalColor", testInjectTerminalColor)
    ]
}

extension XMLInjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLInjectorTests = [
        ("testInjectCssClasses", testInjectCssClasses),
        ("testInjectTerminalColor", testInjectTerminalColor)
    ]
}

extension ZshInjectorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZshInjectorTests = [
        ("testFile1_Html", testFile1_Html),
        ("testFile2_Html", testFile2_Html),
        ("testFile3_Html", testFile3_Html),
        ("testFile4_Html", testFile4_Html)
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(FileInjectionServiceTests.__allTests__FileInjectionServiceTests),
        testCase(InjectorTests.__allTests__InjectorTests),
        testCase(JsonInjectorTests.__allTests__JsonInjectorTests),
        testCase(PlistInjectorTests.__allTests__PlistInjectorTests),
        testCase(XMLEnhancedInjectorTests.__allTests__XMLEnhancedInjectorTests),
        testCase(XMLInjectorTests.__allTests__XMLInjectorTests),
        testCase(ZshInjectorTests.__allTests__ZshInjectorTests)
    ]
}
#endif
