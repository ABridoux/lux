<span class="zsh-comment">#---- Colors ----</span>

<span class="zsh-variable">COLOR_FAILURE</span><span class="zsh-keyword">=</span><span class="zsh-string">'\033[0;31m'</span>
<span class="zsh-variable">COLOR_SUCCESS</span><span class="zsh-keyword">=</span><span class="zsh-string">'\033[0;32m'</span>
<span class="zsh-variable">COLOR_NC</span><span class="zsh-keyword">=</span><span class="zsh-string">'\033[0m'</span> <span class="zsh-comment"># No Color</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">error</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-program">echo</span> <span class="zsh-string">"</span><span class="zsh-variable">${COLOR_FAILURE}</span><span class="zsh-variable">$1</span><span class="zsh-variable">${COLOR_NC}</span><span class="zsh-string">"</span>
    <span class="zsh-program">exit</span><span class="zsh-command-option-value"> 1</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">success</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-program">echo</span> <span class="zsh-string">"</span><span class="zsh-variable">${COLOR_SUCCESS}</span><span class="zsh-variable">$1</span><span class="zsh-variable">${COLOR_NC}</span><span class="zsh-string">"</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-comment"># ---- Files ----</span>

<span class="zsh-variable">json</span><span class="zsh-keyword">=</span><span class="zsh-program">Playground/People.json</span>
<span class="zsh-variable">plist</span><span class="zsh-keyword">=</span><span class="zsh-program">Playground/People.plist</span>
<span class="zsh-variable">xml</span><span class="zsh-keyword">=</span><span class="zsh-program">Playground/People.xml</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">format</span> <span class="zsh-punctuation">{</span>
     <span class="zsh-program">echo</span> <span class="zsh-string">"${1##*.}"</span>
<span class="zsh-punctuation">}</span>
<span class="zsh-comment"># ---- Test functions ----</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">testGet</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-variable">fileFormat</span><span class="zsh-keyword">=</span><span class="zsh-punctuation">`</span><span class="zsh-program">format</span> <span class="zsh-variable">$3</span><span class="zsh-punctuation">`</span>
    <span class="zsh-variable">expected</span><span class="zsh-keyword">=</span><span class="zsh-variable">$2</span>
    <span class="zsh-variable">result</span><span class="zsh-keyword">=</span><span class="zsh-punctuation">`</span><span class="zsh-program">scout</span> <span class="zsh-variable">$1</span> <span class="zsh-option-flag">-i</span> <span class="zsh-variable">$3</span><span class="zsh-punctuation">`</span>

    <span class="zsh-keyword">if</span> <span class="zsh-punctuation">[</span> <span class="zsh-string">"</span><span class="zsh-variable">$result</span><span class="zsh-string">"</span> <span class="zsh-keyword">!=</span> <span class="zsh-string">"</span><span class="zsh-variable">$expected</span><span class="zsh-string">"</span> <span class="zsh-punctuation">]</span><span class="zsh-punctuation">;</span> <span class="zsh-keyword">then</span>
        <span class="zsh-program">error</span> <span class="zsh-string">"Error</span> <span class="zsh-variable">$fileFormat</span> <span class="zsh-string">get. '</span><span class="zsh-variable">$1</span><span class="zsh-variable">' =</span> <span class="zsh-variable">$result</span> <span class="zsh-string">!=</span> <span class="zsh-variable">$expected</span><span class="zsh-string">"</span>
    <span class="zsh-keyword">fi</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">testGetAll</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-variable">expected</span><span class="zsh-keyword">=</span><span class="zsh-variable">$2</span>

    <span class="zsh-program">echo</span> <span class="zsh-string">"Testing get at '</span><span class="zsh-variable">$1</span><span class="zsh-string">'..."</span>

    <span class="zsh-program">testGet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$json</span>
    <span class="zsh-program">testGet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$plist</span>
    <span class="zsh-program">testGet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$xml</span>
    <span class="zsh-program">success</span> <span class="zsh-string">"All test formats passed"</span>
    <span class="zsh-program">echo</span> <span class="zsh-string">""</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">testSet</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-variable">fileFormat</span><span class="zsh-keyword">=</span><span class="zsh-punctuation">`</span><span class="zsh-program">format</span> <span class="zsh-variable">$3</span><span class="zsh-punctuation">`</span>
    <span class="zsh-variable">modified</span><span class="zsh-keyword">=</span><span class="zsh-punctuation">`</span><span class="zsh-program">scout</span> <span class="zsh-command-option-value">set</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">=</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-option-flag">-i</span> <span class="zsh-variable">$3</span> <span class="zsh-option-flag">-v</span><span class="zsh-punctuation">`</span>
    <span class="zsh-variable">valueAtPath</span><span class="zsh-keyword">=</span><span class="zsh-punctuation">`</span><span class="zsh-program">echo</span> <span class="zsh-string">"</span><span class="zsh-variable">$modified</span><span class="zsh-string">"</span> <span class="zsh-keyword">|</span> <span class="zsh-program">scout</span> <span class="zsh-variable">$1</span><span class="zsh-punctuation">`</span>

    <span class="zsh-keyword">if</span> <span class="zsh-punctuation">[</span> <span class="zsh-string">"</span><span class="zsh-variable">$valueAtPath</span><span class="zsh-string">"</span> <span class="zsh-keyword">!=</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-punctuation">]</span><span class="zsh-punctuation">;</span> <span class="zsh-keyword">then</span>
        <span class="zsh-program">error</span> <span class="zsh-string">"Error</span> <span class="zsh-variable">$fileFormat</span> <span class="zsh-string">set. '</span><span class="zsh-variable">$1</span><span class="zsh-string">': expected</span> <span class="zsh-variable">$2</span> <span class="zsh-string">and got</span> <span class="zsh-variable">$valueAtPath</span><span class="zsh-string">"</span>
    <span class="zsh-keyword">fi</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-keyword">function</span> <span class="zsh-command-option-value">testSetAll</span> <span class="zsh-punctuation">{</span>
    <span class="zsh-variable">expected</span><span class="zsh-keyword">=</span><span class="zsh-variable">$2</span>

    <span class="zsh-program">echo</span> <span class="zsh-string">"Testing set at '</span><span class="zsh-variable">$1</span><span class="zsh-string">'..."</span>

    <span class="zsh-program">testSet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$json</span>
    <span class="zsh-program">testSet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$plist</span>
    <span class="zsh-program">testSet</span> <span class="zsh-string">"</span><span class="zsh-variable">$1</span><span class="zsh-string">"</span> <span class="zsh-string">"</span><span class="zsh-variable">$2</span><span class="zsh-string">"</span> <span class="zsh-variable">$xml</span>
    <span class="zsh-program">success</span> <span class="zsh-string">"All test formats passed"</span>
    <span class="zsh-program">echo</span> <span class="zsh-string">""</span>
<span class="zsh-punctuation">}</span>

<span class="zsh-comment"># ---- Tests ----</span>

<span class="zsh-comment"># Get</span>
<span class="zsh-program">echo</span> <span class="zsh-string">"-- Testing Get --"</span>
<span class="zsh-program">testGetAll</span> <span class="zsh-command-option-value">people.Tom.height</span> <span class="zsh-command-option-value">175</span>
<span class="zsh-program">testGetAll</span> <span class="zsh-command-option-value">people.Tom.hobbies[-1]</span> <span class="zsh-command-option-value">guitar</span>
<span class="zsh-program">testGetAll</span> <span class="zsh-command-option-value">people.Tom.hobbies[0]</span> <span class="zsh-command-option-value">cooking</span>
<span class="zsh-program">testGetAll</span> <span class="zsh-command-option-value">people.Suzanne.movies[0].title</span> <span class="zsh-string">"Tomorrow is so far"</span>
<span class="zsh-program">testGetAll</span> <span class="zsh-command-option-value">people.Robert.running_records[1][0]</span><span class="zsh-command-option-value"> 9</span>

<span class="zsh-comment"># -- Test dictionary --</span>

<span class="zsh-variable">TomJson</span><span class="zsh-keyword">=</span><span class="zsh-string">'{
  "age" : 68,
  "hobbies" : [
    "cooking",
    "guitar"
  ],
  "height" : 175
}'</span>
<span class="zsh-program">testGet</span> <span class="zsh-command-option-value">people.Tom</span> <span class="zsh-string">"</span><span class="zsh-variable">$TomJson</span><span class="zsh-string">"</span> <span class="zsh-variable">$json</span>

<span class="zsh-variable">TomPlist</span><span class="zsh-keyword">=</span><span class="zsh-string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
    &lt;key&gt;age&lt;/key&gt;
    &lt;integer&gt;68&lt;/integer&gt;
    &lt;key&gt;height&lt;/key&gt;
    &lt;integer&gt;175&lt;/integer&gt;
    &lt;key&gt;hobbies&lt;/key&gt;
    &lt;array&gt;
        &lt;string&gt;cooking&lt;/string&gt;
        &lt;string&gt;guitar&lt;/string&gt;
    &lt;/array&gt;
&lt;/dict&gt;
&lt;/plist&gt;'</span>

<span class="zsh-program">testGet</span> <span class="zsh-command-option-value">people.Tom</span> <span class="zsh-string">"</span><span class="zsh-variable">$TomPlist</span><span class="zsh-string">"</span> <span class="zsh-variable">$plist</span>

<span class="zsh-variable">TomXml</span><span class="zsh-keyword">=</span><span class="zsh-string">'&lt;Tom&gt;
    &lt;height&gt;175&lt;/height&gt;
    &lt;age&gt;68&lt;/age&gt;
    &lt;hobbies&gt;
        &lt;hobby&gt;cooking&lt;/hobby&gt;
        &lt;hobby&gt;guitar&lt;/hobby&gt;
    &lt;/hobbies&gt;
&lt;/Tom&gt;'</span>

<span class="zsh-program">testGet</span> <span class="zsh-command-option-value">people.Tom</span> <span class="zsh-string">"</span><span class="zsh-variable">$TomXml</span><span class="zsh-string">"</span> <span class="zsh-variable">$xml</span>

<span class="zsh-comment"># Set</span>
<span class="zsh-program">echo</span> <span class="zsh-string">"-- Testing Set --"</span>

<span class="zsh-program">testSetAll</span> <span class="zsh-command-option-value">people.Robert.age</span> <span class="zsh-command-option-value">60</span>
<span class="zsh-program">testSetAll</span> <span class="zsh-command-option-value">people.Suzanne.movies[1].title</span> <span class="zsh-string">"Never gonna die"</span>
<span class="zsh-program">testSetAll</span> <span class="zsh-command-option-value">people.Robert.running_records[0][2]</span> <span class="zsh-command-option-value">15</span>
